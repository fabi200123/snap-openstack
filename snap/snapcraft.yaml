name: openstack
base: core24
summary: Dead simple OpenStack installation
license: Apache-2.0
description: |
  snap-openstack aims to provide a scalable, simple to deploy OpenStack solution.
version: "2024.1"

confinement: strict
grade: stable

platforms:
  amd64:

system-usernames:
  snap_daemon: shared

layout:
  /usr/share/terraform/plugins:
    symlink: $SNAP_DATA/terraform-plugins

apps:
  openstack:
    command: bin/openstack
    completer: usr/share/bash-completion/completions/openstack
    plugs:
      - network
      - home
      - dot-config-openstack
      - etc-openstack
      - ssh-public-keys
  clusterd:
    command: commands/clusterd.start
    restart-condition: on-failure
    daemon: simple
    plugs:
      - network
      - network-bind
  sunbeam:
    command: bin/sunbeam
    plugs:
      - dot-local-share-juju
      - home
      - network
      - network-bind
      - ssh-keys
      - dot-config-openstack
      - etc-openstack
      - dot-local-share-openstack
    environment:
      PATH: $PATH:$SNAP/juju/bin
  terraform:
    command: bin/terraform
    plugs:
      - home
      - network
      - ssh-public-keys
      - juju-client-observe
    environment:
      PATH: $PATH:$SNAP/juju/bin

parts:
  dqlite:
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    source-branch: lts-1.17.x
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --enable-build-raft
    stage-packages:
      - libuv1
      - liblz4-1
      - libsqlite3-0
    build-packages:
      - liblz4-dev
      - libsqlite3-dev
      - libuv1-dev
      - pkg-config
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/liblz4.so*
      - lib/*/libuv.so*

  sunbeam-cluster:
    after:
      - dqlite
    plugin: go
    source: ./sunbeam-microcluster
    source-type: local
    build-snaps:
      - go/1.22/stable
    build-environment:
      - GOFLAGS: -mod=readonly -ldflags=-s
    override-build: |
      set -ex

      # Setup build environment
      export CGO_CFLAGS="-I${CRAFT_STAGE}/include/ -I${CRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${CRAFT_STAGE}/lib/ -L${CRAFT_STAGE}/usr/local/lib/"
      export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)|(-s)"

      # Build the binaries
      go build -o "${CRAFT_PART_INSTALL}/bin/sunbeamd" -tags=libsqlite3 ./cmd/sunbeamd
    prime:
      - bin/sunbeamd

  terraform:
    plugin: go
    source: https://github.com/hashicorp/terraform
    source-depth: 1
    source-type: git
    source-tag: "v1.5.7"
    build-snaps: [go]
    build-environment:
      - CGO_ENABLED: "0"
      - GOFLAGS: "-mod=readonly"
    override-build: |
      go mod download
      go build -ldflags "-s -w"
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp terraform $CRAFT_PART_INSTALL/bin/terraform
    stage:
      - bin/terraform

  terraform-sunbeam-plans:
    after: [terraform]
    plugin: dump
    source: cloud/
    override-build: |
      craftctl default
      for plan in $(ls $CRAFT_PART_INSTALL/etc/);
      do
        cd $CRAFT_PART_INSTALL/etc/$plan
        $CRAFT_STAGE/bin/terraform init
        $CRAFT_STAGE/bin/terraform providers mirror $CRAFT_PRIME/usr/share/terraform-providers
        rm -rf ./.terraform
      done

  terraform-openstack-plan:
    after: [terraform]
    plugin: dump
    source: https://github.com/canonical/sunbeam-terraform
    source-depth: 1
    source-type: git
    organize:
      '*': etc/deploy-openstack/
    override-build: |
      craftctl default
      cd $CRAFT_PART_INSTALL
      $CRAFT_STAGE/bin/terraform init
      $CRAFT_STAGE/bin/terraform providers mirror $CRAFT_PRIME/usr/share/terraform-providers
      rm -rf $CRAFT_PART_INSTALL/.terraform

  wrappers:
    plugin: dump
    source: snap-wrappers/

  manifests:
    plugin: dump
    source: manifests/
    organize:
      '*': etc/manifests/

  sunbeam-and-openstackclients:
    plugin: python
    source: .
    source-subdir: sunbeam-python/
    build-snaps: [astral-uv]
    python-requirements:
      - requirements.txt
    build-packages:
      - libffi-dev
      - libssl-dev
      - libxml2-dev
      - libxslt1-dev
      - pkg-config
      - gcc
      - cython3
      - rustc
      - cargo
    stage-packages:
      - openssh-client
    override-build: |
      uv export --directory sunbeam-python --extra=openstackclients --frozen --no-hashes --format=requirements-txt -o requirements.txt
      craftctl default
    override-prime: |
      craftctl default
      # Write out snap hooks
      snap-helpers write-hooks
      # This is the last step, let's now compile all our pyc files.
      ./bin/python3 -m compileall .
      # Generate completer script snippets
      mkdir -p usr/share/bash-completion/completions
      ./bin/openstack complete > usr/share/bash-completion/completions/openstack
      echo "complete -F _openstack openstack.openstack" >> usr/share/bash-completion/completions/openstack

  plugin-packages:
    plugin: nil
    stage-packages:
      - git
    stage:
      - -usr/share/doc

plugs:
  juju-bin:
    interface: content
    content: juju
    target: $SNAP/juju

  dot-local-share-juju:
    interface: personal-files
    write:
      - $HOME/.local/share/juju

  dot-local-share-openstack:
    interface: personal-files
    write:
      - $HOME/.local/share/openstack

  dot-config-openstack:
    interface: personal-files
    write:
    - $HOME/.config/openstack

  etc-openstack:
    interface: system-files
    read:
    - /etc/openstack
